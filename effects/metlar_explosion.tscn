[gd_scene load_steps=5 format=2]

[ext_resource path="res://environment/raw_assets/TexturesCom_SoilMud0059_1_seamless_S.jpg" type="Texture" id=1]

[sub_resource type="SphereMesh" id=1]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_toon,specular_disabled,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float point_size : hint_range(0,128);
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

uniform float speed = 0.025;

vec2 rotateUV(vec2 uv, vec2 pivot, float rotation) {
    float cosa = cos(rotation);
    float sina = sin(rotation);
    uv -= pivot;
    return vec2(
        cosa * uv.x - sina * uv.y,
        cosa * uv.y + sina * uv.x 
    ) + pivot;
}


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	vec2 pivot = uv1_scale.xy+uv1_offset.xy;
	UV = rotateUV(UV, 0.5/vec2(0.05), TIME * speed);
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	SPECULAR = specular;
	vec4 col = albedo_tex;
	if (base_uv.y > base_uv.y*0.75) {
		col.a = 0.0;
	}
	ALPHA = albedo.a * albedo_tex.a;
}
"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/albedo = Color( 1, 1, 1, 0.611765 )
shader_param/specular = 0.5
shader_param/point_size = 1.0
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/speed = 0.025
shader_param/texture_albedo = ExtResource( 1 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 0.827623, 0.134129, -0.545023, 0.125953, 0.901882, 0.413212, 0.54697, -0.410631, 0.729524, 0, 2, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
